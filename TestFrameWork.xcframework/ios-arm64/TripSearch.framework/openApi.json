{
  "openapi": "3.0.0",
  "info": {
    "title": "Junction Mobile API",
    "version": "1.0.0",
    "description": "This API follows the [JSON:API][jsonapi] specification.\n\n[jsonapi]: https://jsonapi.org/",
    "contact": {
      "name": "Snowfall",
      "url": "https://www.snowfalltravel.com",
      "email": "info@snowfalltravel.com"
    },
    "license": {
      "name": "Junction",
      "url": "https://www.snowfalltravel.com"
    }
  },
  "x-tagGroups": [
    {
      "name": "Internal",
      "tags": [
        "internal"
      ]
    },
    {
      "name": "Orders",
      "tags": [
        "orders"
      ]
    },
    {
      "name": "Places",
      "tags": [
        "places"
      ]
    },
    {
      "name": "User",
      "tags": [
        "user"
      ]
    }
  ],
  "tags": [
    {
      "name": "internal",
      "description": "Endpoints not for public use.",
      "x-displayName": "Internal"
    },
    {
      "name": "orders",
      "description": "A collection of bookings.",
      "x-displayName": "Orders"
    },
    {
      "name": "places",
      "description": "Endpoints providing information about places.",
      "x-displayName": "Places"
    },
    {
      "name": "user",
      "description": "Endpoints for user resource management.",
      "x-displayName": "Authorization"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health",
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "meta": {
                        "status": "ok"
                      }
                    }
                  },
                  "properties": {
                    "meta": {
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Health status",
                          "enum": [
                            "pass",
                            "fail",
                            "warn"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-health",
        "description": "Check the application health.",
        "x-internal": true,
        "security": []
      }
    },
    "/orders/{orderId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/orderId"
        }
      ],
      "get": {
        "summary": "Retrieve order by id",
        "tags": [
          "orders"
        ],
        "description": "Used to retrieve order details.",
        "operationId": "get-order",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "New Order",
        "tags": [
          "orders"
        ],
        "operationId": "post-order",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        },
        "description": "Used to create an Order and book the specified Offers.",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        }
      }
    },
    "/places": {
      "get": {
        "summary": "Places",
        "tags": [
          "places"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Places list.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Place"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-places",
        "description": "Get places.",
        "security": []
      }
    },
    "/verification-code":{
      "post":{
        "tags": [
          "user"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {"type": "string"},
                      "id": {"type": "string"},
                      "attributes": {
                        "type": "object",
                        "properties":{
                          "email": {
                            "type": "string",
                            "pattern": "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$",
                            "example": "user@example.com"
                          }
                        },
                        "required": ["email"]
                      }
                    },
                    "required": ["type", "id", "attributes"]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "operationId": "post-opt-generate",
        "description": "Otp generation"
      }
    },
    "/users":{
      "post":{
        "tags": [
          "user"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {"type": "string"},
                      "id": {"type": "string"},
                      "attributes": {
                        "type": "object",
                        "properties":{
                          "name": {"type": "string"},
                          "password": {
                            "type": "string",
                            "format": "password"
                          },
                          "email": {
                            "type": "string",
                            "pattern": "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$",
                            "example": "user@example.com"
                          },
                          "phone": {"type": "string"}
                        },
                        "required": ["name", "password", "email", "phone"]
                      }
                    },
                    "required": ["type", "id", "attributes"]
                  }
                }
              }
            }
          }
        },
        "operationId": "post-signup",
        "description": "User signup",
        "security": [{"otp": []}]
      }
    },
    "/users/sessions":{
      "post":{
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {"type": "string"},
                        "id": {"type": "string"}
                      },
                      "required": ["type", "id"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {"type": "string"},
                      "attributes": {
                        "type": "object",
                        "properties":{
                          "password": {"type": "string"},
                          "email": {
                            "type": "string",
                            "pattern": "[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$",
                            "example": "user@example.com"
                          }
                        },
                        "required": ["password", "email"]
                      }
                    },
                    "required": ["type", "attributes"]
                  }
                }
              }
            }
          }
        },
        "operationId": "post-login",
        "description": "User login",
        "security": []
      }
    },
    "/users/{userId}":{
      "parameters": [{
        "name": "userId",
        "in": "path",
        "required": true,
        "schema": {"type": "string"},
        "description": "Target userId you want to change the password"
      }],
      "patch":{
        "tags": [
          "user"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {"type": "string"},
                      "id": {"type": "string"},
                      "attributes": {
                        "type": "object",
                        "properties":{
                          "password": {"type": "string"}
                        },
                        "required": ["password"]
                      }
                    },
                    "required": ["type", "id", "attributes"]
                  }
                }
              }
            }
          }
        },
        "operationId": "patch-change-password",
        "description": "User change password",
        "security": [{"otp": []}]
      }
    }
  },
  "components": {
    "parameters": {
      "orderId": {
        "name": "orderId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "04f83af9-90bb-4a0f-9881-03e1e690f7f5",
          "format": "uuid"
        },
        "description": "Order identifier"
      }
    },
    "schemas": {
      "Place": {
        "title": "Place",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "04f83af9-90bb-4a0f-9881-03e1e690f7f5",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "enum": [
              "places"
            ]
          },
          "attributes": {
            "type": "object",
            "required": [
              "name",
              "latitude",
              "longitude",
              "countryCode",
              "countryName",
              "timeZone",
              "iataCode"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "Stockholm Arlanda Airport",
                "readOnly": true
              },
              "latitude": {
                "type": "number",
                "format": "float",
                "example": 59.651164062,
                "minimum": -90,
                "maximum": 90
              },
              "longitude": {
                "type": "number",
                "format": "float",
                "example": 17.917829662,
                "minimum": -180,
                "maximum": 180
              },
              "countryCode": {
                "type": "string",
                "pattern": "^[A-Z]{2}$",
                "minLength": 2,
                "maxLength": 2,
                "example": "SE",
                "readOnly": true
              },
              "countryName": {
                "type": "string",
                "example": "Sweden",
                "readOnly": true,
                "nullable": true
              },
              "timeZone": {
                "type": "string",
                "example": "Europe/Stockholm",
                "readOnly": true
              },
              "iataCode": {
                "type": "string",
                "example": "ARN",
                "pattern": "^[A-Z]{3}$",
                "minLength": 3,
                "maxLength": 3,
                "nullable": true,
                "readOnly": true
              }
            }
          },
          "relationships": {
            "type": "object",
            "required": [
              "types"
            ],
            "properties": {
              "types": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PlaceTypeIdentifier"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "A place is an indexed reference to a location that Junction might have related content for. It is specified in a trip search to state where a passenger wishes to travel from/to. Each place is allocated a unique identifier.\n\nPlaces are curated by feeds from GTFS sources.  A place can be a rail station, Airport...",
        "x-examples": {
          "example-1": {
            "id": "cb327cb5-9228-5413-a6e4-e220e01496dc",
            "type": "places",
            "attributes": {
              "countryCode": "ES",
              "countryName": "Spain",
              "iataCode": null,
              "latitude": 42.424701,
              "longitude": 3.158034,
              "name": "Portbou",
              "timeZone": "Europe/Madrid"
            },
            "relationships": {
              "types": {
                "data": [
                  {
                    "id": "airport",
                    "type": "place-types"
                  }
                ]
              }
            }
          }
        }
      },
      "PlaceTypeIdentifier": {
        "title": "Place Type Identifier",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "airport"
          },
          "type": {
            "type": "string",
            "enum": [
              "place-types"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "Order": {
        "title": "Order",
        "allOf": [
          {
            "type": "object",
            "required": [
              "id",
              "type",
              "attributes"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "04f83af9-90bb-4a0f-9881-03e1e690f7f5",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "orders"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "paymentIntentId": {
                    "type": "string"
                  },
                  "offerAggregate": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "expiresAt": {
                        "type": "string"
                      },
                      "groups": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "$ref": "#/components/schemas/OfferGroup"
                        }
                      }
                    }
                  },
                  "passengers": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                      "$ref": "#/components/schemas/Passenger"
                    }
                  },
                  "contactDetails": {
                    "$ref": "#/components/schemas/ContactDetails"
                  },
                  "orderResults": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "readOnly": true,
                    "items": {
                      "$ref": "#/components/schemas/OrderResult"
                    }
                  }
                },
                "required": [
                  "offerAggregate",
                  "passengers",
                  "contactDetails",
                  "paymentIntentId",
                  "createdAt"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/SelfLink"
          }
        ],
        "description": "Collection of multiple booked Offers."
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "description": "JSON:API error",
        "properties": {
          "status": {
            "type": "string",
            "pattern": "^[45][0-9]{2}$",
            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
            "example": "404"
          },
          "title": {
            "type": "string",
            "example": "Not Found",
            "description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem. Like `title``, this field’s value can be localized.",
            "example": "Nothing matches the given URI"
          },
          "code": {
            "type": "string",
            "example": "required",
            "description": "An application-specific error code, expressed as a string value."
          },
          "source": {
            "type": "object",
            "description": "An object containing references to the source of the error.",
            "properties": {
              "pointer": {
                "type": "string",
                "example": "/data/attributes/title",
                "description": "A JSON Pointer to the associated entity in the request document."
              }
            },
            "required": [
              "pointer"
            ]
          }
        },
        "required": [
          "status",
          "detail"
        ]
      },
      "Offer": {
        "title": "Offer",
        "description": "Offer for one or more segments. Used for creating an Order.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "segmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferSegmentDetails"
            }
          }
        },
        "required": [
          "id",
          "price",
          "segmentDetails"
        ]
      },
      "OfferSegmentDetails": {
        "title": "Offer Segment Details",
        "description": "Specific details for an offer on a specific segment.",
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "format": "uuid"
          },
          "cabinClass": {
            "$ref": "#/components/schemas/CabinClassDetails"
          }
        },
        "required": [
          "ref",
          "cabinClass"
        ]
      },
      "CabinClassDetails": {
        "title": "Cabin Class Details",
        "description": "Internal and marketing name of a cabin class.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "marketingName": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "marketingName"
        ]
      },
      "Price": {
        "title": "Price",
        "description": "Amount and currency.",
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "OfferSegment": {
        "title": "Offer Segment",
        "description": "Segment related to a grouped offer.",
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "format": "uuid"
          },
          "legs": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/OfferSegmentLeg"
            }
          },
          "vendor": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "routeIdentifiers": {
            "$ref": "#/components/schemas/RouteIdentifiers"
          }
        },
        "required": [
          "ref",
          "legs",
          "vendor",
          "operator"
        ]
      },
      "RouteIdentifiers": {
        "title": "Route Identifiers",
        "description": "Route identifiers that the operator (operating) and vendor (marketing) uses, i.e. operating flight number and marketing flight number or vice versa for train or buss line numbers.",
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "vendor",
          "operator"
        ]
      },
      "OfferSegmentLeg": {
        "title": "Offer Segment Leg",
        "description": "Leg related to a grouped offers segments.",
        "type": "object",
        "properties": {
          "origin": {
            "$ref": "#/components/schemas/Point"
          },
          "destination": {
            "$ref": "#/components/schemas/Point"
          },
          "departureAt": {
            "type": "string",
            "format": "date-time"
          },
          "arrivalAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "origin",
          "destination",
          "departureAt",
          "arrivalAt"
        ]
      },
      "Point": {
        "title": "Point",
        "description": "Generalized data about a location.",
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "example": "890880d9d63ffff"
          },
          "name": {
            "type": "string",
            "example": "Uppsala Central Station"
          },
          "latitude": {
            "type": "number",
            "example": 59.858611
          },
          "longitude": {
            "type": "number",
            "example": 17.646111
          },
          "timeZone": {
            "type": "string",
            "example": "Europe/Stockholm"
          }
        },
        "required": [
          "ref",
          "name",
          "latitude",
          "longitude",
          "timeZone"
        ]
      },
      "OfferGroup": {
        "title": "Offer Group",
        "description": "Result of searching for offers. Used for creating an Order. Chose one offer when creating an order.",
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Offer"
            }
          },
          "segments": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/OfferSegment"
            }
          }
        },
        "required": [
          "offers",
          "segments"
        ]
      },
      "ContactDetails": {
        "title": "ContactDetails",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "addressLines": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "countryCode": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              }
            }
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "SelfLink": {
        "title": "Self Link",
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "required": [
              "self"
            ],
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://example.com/resource/04f83af9-90bb-4a0f-9881-03e1e690f7f5",
                "readOnly": true
              }
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "Passenger": {
        "title": "Passenger",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "title",
          "gender",
          "dateOfBirth"
        ]
      },
      "OrderResult": {
        "title": "OrderResult",
        "type": "object",
        "readOnly": true,
        "properties": {
          "offerId": {
            "type": "string",
            "readOnly": true,
            "example": "04f83af9-90bb-4a0f-9881-03e1e690f7f5"
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "example": "pending",
            "enum": [
              "unspecified",
              "pending",
              "confirmed",
              "rejected",
              "not_ticketed",
              "error"
            ]
          }
        },
        "required": [
          "offerId",
          "status"
        ]
      }
    },
    "responses":{
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "uniqueItems": true,
                  "minItems": 1,
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable Entity",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      }
    },
    "securitySchemes":{
      "otp": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
